% Measures linearity/tortuosity on an interpolant with fixed window length
% Here, the underlying function is sine

% To compute on sine:
% Define sine equidistant in x
x = 1:.01:20;
y = sin(x.^2);
xy = [x' y'];

% To compute on a real trail:
% Sample odor trail extracted from Pete's data
% trail = [5.25313411333135,-27.4332119741028;4.63102698919805,-26.8142633907975;3.95479971169114,-26.2548651086655;3.23528214497849,-25.7522387157697;2.48342339286262,-25.2992734881621;1.70906543178863,-24.8858163682842;0.920525793650011,-24.4999961161309;0.124795057892296,-24.1291801898330;-0.671941053939253,-23.7605217154226;-1.46366268424281,-23.3812502410267;-2.24387956124611,-22.9789175930523;-3.00509661170972,-22.5418041200749;-3.73854506513997,-22.0596623877320;-4.43380000990459,-21.5240492552524;-5.07727395667604,-20.9273946412550;-5.65152292369298,-20.2640501367478;-6.13887987510837,-19.5345488364397;-6.53420867092955,-18.7512707804163;-6.83756169237310,-17.9279348616411;-7.04885835145608,-17.0763113585765;-7.15366259290964,-16.2053940944342;-7.12276648720723,-15.3291387395514;-6.92964452879862,-14.4741340670819;-6.59014952058796,-13.6655369204276;-6.13738584624900,-12.9141527057413;-5.59726049282198,-12.2226267119599;-4.99364251220897,-11.5855153882046;-4.34723356389050,-10.9916750793887;-3.67178459488049,-10.4310184267569;-2.97367033380957,-9.89880983243021;-2.25815463438238,-9.39020244182876;-1.52997956623064,-8.89986426859328;-0.793430776756050,-8.42217808105599;-0.0524599640903958,-7.95137028872474;0.689385634881294,-7.48194018456277;1.42953167760463,-7.00983738466357;2.16560026167103,-6.53140789641564;2.89510825249325,-6.04304213776379;3.61541827514113,-5.54122089039863;4.32370072368274,-5.02257648594959;5.01689302519257,-4.48394677331742;5.69131025139687,-3.92201061586371;6.34251075531407,-3.33335454117439;6.96550399312701,-2.71495416251145;7.55501335735185,-2.06458206673887;8.10694270999248,-1.38204300789420;8.61749597592151,-0.668041691310521;9.08270364652872,0.0762877122418288;9.50157905133771,0.847663168300080;9.87614854076164,1.64151946435945;10.2088654259718,2.45382402334349;10.4995921172602,3.28206846872939;10.7413479671283,4.12586901054426;10.9257482723886,4.98398620550059;11.0447881566203,5.85354528981251;11.0942927252621,6.72980422014201;11.0714854229008,7.60714341430742;10.9736608241860,8.47930017501470;10.8070403807417,9.34104412013224;10.5850282669858,10.1902787025202;10.3208439684438,11.0274098277804;10.0248361640795,11.8538404321693;9.69187959863617,12.6660353192143;9.31026032205635,13.4564540768448;8.86896661237654,14.2150660911929;8.36244490495962,14.9317581860134;7.79876097503314,15.6044963827950;7.18775487726303,16.2346347794551;6.53744964534237,16.8241705703709;5.84873037506458,17.3682412051605;5.11829546605045,17.8547236539237;4.34488480161773,18.2692787788621;3.53205297121653,18.5998872642448;2.69026165669258,18.8478908814900;1.82937491999839,19.0184445808208;0.957223202748462,19.1166119230837;0.0800464798519585,19.1463139897942;-0.796870308494963,19.1094846040598;-1.66867092815029,19.0079004372885;-2.53083835558387,18.8434732474953;-3.37915919055422,18.6182293064316;-4.21007899863976,18.3354126746761;-5.02085412409262,17.9991315088780;-5.80931530945678,17.6133915748156;-6.57373834918905,17.1819463239627;-7.31258018915938,16.7080148536656;-8.02364951271429,16.1933538629768;-8.70443231832359,15.6392545760059;-9.35234156889127,15.0470559699826;-9.96471246676463,14.4181835557806;-10.5388984609940,13.7542671670708;-11.0731998424091,13.0578438683589;-11.5666201255791,12.3318769966772;-12.0182923110744,11.5792214108607;-12.4274217710968,10.8026156462276;-12.7932434624256,10.0046923383214;-13.1149865232034,9.18799740191939;-13.3918465523709,8.35501586928007;-13.6229657516746,7.50820272793769;-13.8074212013716,6.65001742849456;-13.9442217752119,5.78296089479539];
% xy = trail;

% Optional, add noise to positions
xy = xy+ 1e-4*rand(size(xy));

% Remove NaNs from sample
nanlist = isnan(xy);
xy = xy(~any(isnan(xy),2),:);
x = xy(:,1);
y = xy(:,2);

% Interp points equidistant along arc length

arcl = sum( sqrt( diff(x).^2 + diff(y).^2 ) );
pt_density = 30; %per unit arcl length (assume cm for most trail data)

% Uncomment for spline fit
% zz = interparc(roundn(pt_density*arcl,0),x,y,'spline');

% Uncomment for linear interpolant
zz = interparc(roundn(pt_density*arcl,0),x,y,'spline');

%Store linearity in the lin vectroy
lin = nan(length(zz),1);

% Window size
res = 0.02; % Resolution scaling term; eg, window length = 2% total length
win = roundn(res*length(zz),0);

if mod(win,2)==0
    win = win+1; % Make window an odd length so it is centered on each point
end

% Loop over all positions
for i = 1+(win-1)/2 : length(lin)-(win-1)/2
x_w = zz(i-(win-1)/2 : i+(win-1)/2, 1) ;
y_w = zz(i-(win-1)/2 : i+(win-1)/2, 2) ;

ab = sqrt( (x_w(end) - x_w(1))^2 + (y_w(end) - y_w(1))^2 ); % Euclidean distance of window 
cd = sum( sqrt( diff(x_w).^2 + diff(y_w).^2 ) ); % arc length of window
lin(i) = ab/cd; %linearity of window
end

plot(xy(:,1),xy(:,2),'k')
hold on
scatter(zz(:,1), zz(:,2),50,lin,'.')
title('Odor Trail Linearity')
hold off